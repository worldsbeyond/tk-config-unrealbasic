# This file is based on templates provided and copyrighted by Autodesk, Inc.
# This file has been modified by Epic Games, Inc. and is subject to the license
# file included in this repository.

keys:
    # General keys which are usually available, added here to ensure they are 
    # always available.
    # They can be overridden in the templates.yml file in which this file is
    # included, if done after the include directive.
    Sequence:
        type: str
    Shot:
        type: str
    Step:
        type: str
    Asset:
        type: str
    name:
        type: str
        filter_by: '^[a-zA-Z0-9_-]+$'
    iteration:
        type: int
    version:
        type: int
        format_spec: "03"

    # Date/time related keys
    # 2-digit day number
    DD:
        type: int
        format_spec: "02"

    # 2-digit month number
    MM:
        type: int
        format_spec: "02"

    # 4-digit year number
    YYYY:
        type: int
        format_spec: "04"

    # These are used by the Loader in Unreal
    ue_sg_asset_type:
        type: str
        shotgun_entity_type: Asset
        shotgun_field_name: sg_asset_type
    ue_sg_asset_name:
        type: str
        shotgun_entity_type: Asset
        shotgun_field_name: code
    ue_sg_shot_name:
        type: str
        shotgun_entity_type: Shot
        shotgun_field_name: code
    ue_sg_sequence_name:
        type: str
        shotgun_entity_type: Shot
        shotgun_field_name: sg_sequence
    # These are used by the Movie Publish in Unreal
    ue_project_directory:
        type: str
    ue_level_sequence:
        type: str
    # Movie extension for UE, avi on Windows, mov on other platforms
    ue_mov_ext:
        type: str
        choices:
            mov: Quicktime Movie (.mov)
            avi: Audio Video Interleaved (.avi)
    # File extension
    extension:
        type: str

strings:
    #
    # Unreal
    #
    shot_root: "shots"
    asset_root: "assets"
    # level sequence review output from unreal
    unreal.movie_publish:
        definition: '{ue_project_directory}/Saved/FlowRenders/{ue_level_sequence}/{ue_level_sequence}_v{version}.{ue_mov_ext}'
    # The location of FBX exports for Unreal
    unreal.maya_asset_fbx_publish:
        definition: '@asset_root/publish/fbx/{name}.v{version}.fbx'
    # The location of turntable review output rendered in Unreal
    unreal.maya_turntable_render:
        definition: '@asset_root/work/images/{name}_turntable_v{version}.{ue_mov_ext}'
    unreal.maya_turntable_publish:
        definition: '@asset_root/review/{Asset}_{name}_turntable_v{version}.{ue_mov_ext}'
    # Placeholder location for static mesh assets exported from Unreal
    # Hook implementation intended to be a starting point for a pipeline
    # No context info used in template, developers expected to further customize
    unreal.asset_publish:
        definition: 'assets/unrealdemo/exports/{YYYY}_{MM}_{DD}/{name}.fbx'
    # entity-specific templates for importing files into the Unreal content browser
    # template logic is defined in Python, not settings:
    # tk-unreal/hooks/tk-multi-loader2/tk-unreal_actions.py
    unreal_loader_asset_path: "/Game/Assets/{ue_sg_asset_type}/{ue_sg_asset_name}/"
    unreal_loader_asset_name: "{ue_sg_asset_name}_{name}"
    unreal_loader_shot_path: "/Game/Cinematics/Sequences/{ue_sg_sequence_name}/{ue_sg_shot_name}/"
    unreal_loader_shot_name: "{ue_sg_shot_name}_{name}"
    unreal_loader_project_path: "/Game/Assets/"
    unreal_loader_project_name: "{name}"
